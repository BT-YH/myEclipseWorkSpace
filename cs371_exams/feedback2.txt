Testing initiated. Mon 20 Mar 2023 03:09:14 PM EDT
NOTE: Written questions will be evaluated manually.
ERROR: README NOT FOUND.
LatinSquareSolver.java submitted.
SetCollectionSolver.java submitted.
Compilation of all java files succeeded.
Testing LatinSquareSolver:
JUnit version 4.12
.Test grid:
3.1.
...2
....
..3.

Solving...Done.

Returned solution grid:
3214
1342
4123
2431

Success!

Test grid:
.....
....4
..2.5
.4.32
53...

Solving...E
Time: 32.848
There was 1 failure:
1) test(LatinSquareSolverJUnitTest)
org.junit.runners.model.TestTimedOutException: test timed out after 30000 milliseconds
	at LatinSquareSolver$LatinSquareNode.clone(LatinSquareSolver.java:166)
	at LatinSquareSolver$LatinSquareNode.expand(LatinSquareSolver.java:147)
	at LatinSquareSolver.search(LatinSquareSolver.java:69)
	at LatinSquareSolver.solve(LatinSquareSolver.java:15)
	at LatinSquareSolverJUnitTest.test(LatinSquareSolverJUnitTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)

FAILURES!!!
Tests run: 1,  Failures: 1

Testing SetCollectionSolver:
JUnit version 4.12
.Test Problem Lots:
[{0, 2, 7}, {1, 3, 9}, {0, 2, 5}, {1, 3, 6}, {1, 4, 5}, {2, 3, 5}, {0, 1, 6}, {4, 5, 7}, {0, 1, 8}, {1, 7, 9}]
Test Problem Lot Costs:
[11.407599191217091, 10.295361734747463, 13.242762371284488, 12.291312305309468, 12.953723598647539, 4.949763223697971, 6.918129211276338, 16.345737108586068, 7.829498875860186, 15.069833560620653]

Example acceptable solution: 
{1, 3, 9}
{2, 3, 5}
{0, 1, 6}
{4, 5, 7}
{0, 1, 8}
Cost: 46.33849015416803

SetCollectionSolver@f814056
[true, true, false, true, false, false, false, true, true, false]
[true, true, true, true, true, true, true, true, true, true]
cost: 58.169509215720275
Your solution: 
{0, 2, 7}
{1, 3, 9}
{1, 3, 6}
{4, 5, 7}
{0, 1, 8}
Your cost: 58.169509215720275

E
Time: 2.934
There was 1 failure:
1) test(SetCollectionSolverJUnitTest)
java.lang.AssertionError: Your solution has an unacceptably high cost.
	at org.junit.Assert.fail(Assert.java:88)
	at SetCollectionSolverJUnitTest.test(SetCollectionSolverJUnitTest.java:196)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)

FAILURES!!!
Tests run: 1,  Failures: 1

Testing completed. Mon 20 Mar 2023 03:09:51 PM EDT
